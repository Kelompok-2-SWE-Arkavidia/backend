name: Deploy to Production

on:
  workflow_run:
    workflows: ["Go CD"]
    branches: [main]
    types:
      - completed

jobs:
  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Navigate to project directory
            cd /path/to/your/project
            
            # Pull latest code
            git pull origin main
            
            # Set environment variables for Docker Compose
            export DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}
            export DB_USER=${{ secrets.DB_USER }}
            export DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            export DB_NAME=${{ secrets.DB_NAME }}
            export JWT_SECRET=${{ secrets.JWT_SECRET }}
            export AES_KEY=${{ secrets.AES_KEY }}
            export APP_URL=${{ secrets.APP_URL }}
            export SMTP_HOST=${{ secrets.SMTP_HOST }}
            export SMTP_PORT=${{ secrets.SMTP_PORT }}
            export SMTP_SENDER_NAME="${{ secrets.SMTP_SENDER_NAME }}"
            export SMTP_AUTH_EMAIL=${{ secrets.SMTP_AUTH_EMAIL }}
            export SMTP_AUTH_PASSWORD=${{ secrets.SMTP_AUTH_PASSWORD }}
            export CLIENT_KEY=${{ secrets.CLIENT_KEY }}
            export SERVER_KEY=${{ secrets.SERVER_KEY }}
            export IS_PROD=${{ secrets.IS_PROD }}
            export AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET }}
            export AWS_S3_REGION=${{ secrets.AWS_S3_REGION }}
            export AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }}
            export AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }}
            export AI_MODEL_URL=${{ secrets.AI_MODEL_URL }}
            export GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}
            export GEMINI_MODEL=${{ secrets.GEMINI_MODEL }}
            
            # Pull latest Docker image
            docker pull ${{ secrets.DOCKER_USERNAME }}/go-starter:latest
            
            # Restart services with new image
            docker-compose -f docker-compose.prod.yml down
            docker-compose -f docker-compose.prod.yml up -d
            
            # Run database migrations
            docker-compose -f docker-compose.prod.yml exec -T app /app/db-cli -migrate